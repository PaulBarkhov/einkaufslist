{"version":3,"sources":["broccoli.svg","apple.svg","spinach.png","berry.svg","NewListItem.js","NewListGroup.js","List.js","Lists.js","NewList.js","App.js","index.js"],"names":["NewListItem","state","checked","undefined","quantity","key","componentDidMount","console","log","setState","Math","random","toString","substring","handleChange","event","props","getData","art","item","name","target","isChecked","published","increaseQuantity","decreaseQuantity","renderQuantity","style","float","className","onClick","margin","fontWeight","this","background","darkMode","ListGroupItem","display","justifyContent","type","onChange","Component","NewListGroup","isOpen","setIsOpen","renderItems","items","map","src","icon","alt","fontSize","marginLeft","width","padding","artName","Collapse","ListGroup","marginTop","textAlign","List","renderList","arr","list","data","filter","length","renderComment","comment","deleteList","id","isDeleted","vegetables","broccoli","fruits","apple","greens","spinach","berries","berry","Button","color","Lists","renderLists","lists","header","togglePapa","NewList","push","setListName","value","addNewList","getList","renderListGroups","qwe","nextSibling","addComment","listGroups","position","placeholder","onFocus","paddingLeft","top","left","height","transform","animation","alignItems","border","borderRadius","outline","App","visible","window","matchMedia","matches","obj","newArr","document","querySelector","ReactDOM","render","StrictMode","getElementById"],"mappings":"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AM,oDACP,CAACA,KAAM,8CACP,CAACA,KAAM,0DACP,CAACA,KAAM,sBACP,CAACA,KAAM,8CACP,CAACA,KAAM,8CACP,CAACA,KAAM,kCACP,CAACA,KAAM,wCACP,CAACA,KAAM,0CAIf,CACIA,KAAM,SACNmC,QAAS,uCACTN,KAAM0B,EACNX,KAAM,CACF,CAAC5C,KAAM,8CACP,CAACA,KAAM,wCACP,CAACA,KAAM,oDACP,CAACA,KAAM,kCACP,CAACA,KAAM,kCACP,CAACA,KAAM,oDACP,CAACA,KAAM,wCACP,CAACA,KAAM,0DACP,CAACA,KAAM,kCACP,CAACA,KAAM,4BACP,CAACA,KAAM,4BACP,CAACA,KAAM,4BACP,CAACA,KAAM,kCACP,CAACA,KAAM,kCACP,CAACA,KAAM,oDACP,CAACA,KAAM,oDACP,CAACA,KAAM,wCACP,CAACA,KAAM,kCACP,CAACA,KAAM,0CAIf,CACIA,KAAM,SACNmC,QAAS,uCACTN,KAAM4B,EACNb,KAAM,CACF,CAAC5C,KAAM,8CACP,CAACA,KAAM,sBACP,CAACA,KAAM,qDACP,CAACA,KAAM,oDACP,CAACA,KAAM,wCACP,CAACA,KAAM,kCACP,CAACA,KAAM,yFACP,CAACA,KAAM,wCACP,CAACA,KAAM,0CAIf,CACIA,KAAM,UACNmC,QAAS,iCACTN,KAAM8B,EACNf,KAAM,CACF,CAAC5C,KAAM,kCACP,CAACA,KAAM,8CACP,CAACA,KAAM,0DACP,CAACA,KAAM,oDACP,CAACA,KAAM,wCACP,CAACA,KAAM,0DACP,CAACA,KAAM,wCACP,CAACA,KAAM,0DACP,CAACA,KAAM,kCACP,CAACA,KAAM,8CACP,CAACA,KAAM,kG,EAKnByE,iBAAmB,WACf,OAAO,EAAK/B,IAAIf,KAAI,SAAA5B,GAChB,OACI,cAAC,EAAD,CACAF,QAAW,EAAKA,QAChBC,IAAOC,EAAKC,KACZ0B,MAAS3B,EAAK6C,KACdT,QAAWpC,EAAKoC,QAChBN,KAAQ9B,EAAK8B,KACbd,SAAY,EAAKnB,MAAMmB,e,EAKnC2D,IAAM,SAAC/E,GACHA,EAAMM,OAAO0E,YAAYpE,MAAMU,QAAU,Q,EAG7C+B,QAAU,G,EAEV4B,WAAa,SAACjF,GACV,EAAKqD,QAAUrD,EAAMM,OAAOqE,O,4CAGhC,WACInF,QAAQC,IAAIyB,KAAKhC,MAAMmE,SAEvB,IAAM6B,EAAahE,KAAK4D,mBAClBZ,GAAgC,IAAxBhD,KAAKjB,MAAMmB,SAAoB,QAAU,QACjDD,GAAqC,IAAxBD,KAAKjB,MAAMmB,SAAoB,kBAAoB,qBAEtE,OACI,qCACI,yBAAQR,MAAO,CAACuE,SAAU,YAA1B,UACI,uBACIC,YAAY,uEAEZtE,UAAU,cACVuE,QAAWnE,KAAK6D,IAChBtD,SAAYP,KAAKwD,YACjB9D,MAAO,CAACsD,MAAOA,EAAOtB,UAAW,OAAQ0C,YAAa,SAE1D,qBAAK1E,MAAO,CAACuE,SAAU,WAAYI,IAAK,MAAOC,KAAM,MAAOlD,MAAO,MAAOmD,OAAQ,OAAQC,UAAW,mBAAoBvE,WAAY+C,EAAOyB,UAAW,uCAG1JT,EAED,sBAAKtE,MAAO,CAACU,QAAS,OAAQsE,WAAY,UAA1C,UACI,uBACInE,SAAUP,KAAK+D,WACfG,YAAc,qEACdxE,MAAO,CACH0B,MAAO,OACPD,WAAY,OACZoD,OAAQ,OACRI,OAAQ,uCACRC,aAAc,MACd5B,MAAOA,EACP/C,WAAYA,EACZ4E,QAAS,OACTT,YAAa,UAErB,cAACrB,EAAA,EAAD,CACIC,MAAM,UACNnD,QAASG,KAAK0D,WACdhE,MACI,CAACC,MAAO,QACRG,OAAQ,QALhB,0B,GAlLiBU,aCHhBsE,E,4MACnB9G,MAAQ,CACNmF,MAAO,GACP4B,SAAS,EACT7E,UAAU,G,EAGZ7B,kBAAoB,WAClBC,QAAQC,IAAIyG,OAAOC,WAAW,yBAC1BD,OAAOC,YAAcD,OAAOC,WAAW,gCAAgCC,SACzE,EAAK1G,SAAS,CAAC0B,UAAU,K,EAI7BmD,WAAa,WACX,EAAK7E,SAAS,CAACuG,SAAU,EAAK/G,MAAM+G,W,EAGtCpB,QAAU,SAACxE,EAAM4C,EAAMI,GACrB,EAAKkB,aACL,IAAMF,EAAQ,EAAKnF,MAAMmF,MACnBgC,EAAM,CACV9C,GAAI5D,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,IAC5CO,KAAMA,EACN4C,KAAMA,EACNI,QAASA,GAEPJ,EAAKE,OAAS,IAChBkB,EAAMI,KAAK4B,GACX,EAAK3G,SAAS,CAAC2E,MAAOA,M,EAI1Bf,WAAa,SAACC,GACZ,IAAM+C,EAAS,EAAKpH,MAAMmF,MAAMnB,QAAO,SAAA9C,GACrC,OAAOA,EAAKmD,KAAOA,KAErB,EAAK7D,SAAS,CAAC2E,MAAOiC,K,4CAGxB,WAOE,OALIpF,KAAKhC,MAAMkC,WACbmF,SAASC,cAAc,QAAQ5F,MAAMO,WAAa,QAClDoF,SAASC,cAAc,QAAQ5F,MAAMsD,MAAQ,SAE/C1E,QAAQC,IAAI,iBACRyB,KAAKhC,MAAM+G,QAEX,cAAC,EAAD,CACEpB,QAAS3D,KAAK2D,QACdzD,SAAUF,KAAKhC,MAAMkC,WAKzB,cAAC,EAAD,CACEiD,MAAOnD,KAAKhC,MAAMmF,MAClBf,WAAYpC,KAAKoC,WACjBiB,WAAYrD,KAAKqD,WACjBnD,SAAUF,KAAKhC,MAAMkC,e,GA5DIM,aCAjC+E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFJ,SAASK,eAAe,W","file":"static/js/main.864d36a3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/broccoli.7c49f702.svg\";","export default __webpack_public_path__ + \"static/media/apple.f9cbf62c.svg\";","export default __webpack_public_path__ + \"static/media/spinach.99955154.png\";","export default __webpack_public_path__ + \"static/media/berry.a9fe4193.svg\";","import { React, Component} from 'react'\r\nimport { ListGroupItem } from 'reactstrap'\r\n\r\nexport default class NewListItem extends Component {\r\n    state = {\r\n        checked: undefined,    \r\n        quantity: 1,\r\n        key: ''\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        console.log('Component did mount')\r\n        this.setState(\r\n            {key: Math.random().toString(36).substring(2, 15)}\r\n        )\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.props.getData(this.props.art, this.props.item.name, this.state.quantity, event.target.checked, this.state.key)\r\n        this.setState({\r\n            checked: event.target.checked,\r\n        })\r\n    }\r\n\r\n    isChecked = () => {\r\n        if (this.state.checked) {\r\n            if (this.props.published) {\r\n                return <del>{this.props.item.name}</del>\r\n\r\n            }\r\n            else return <b>{this.props.item.name}</b>\r\n\r\n        }\r\n        else return <>{this.props.item.name}</>\r\n    }\r\n\r\n    increaseQuantity = () => {\r\n        this.props.getData(this.props.art, this.props.item.name, this.state.quantity + 1, this.state.checked, this.state.key)\r\n        this.setState({quantity: this.state.quantity + 1})\r\n    }\r\n\r\n    decreaseQuantity = () => {\r\n        if (this.state.quantity === 1) {\r\n            this.props.getData(this.props.art, this.props.item.name, this.state.quantity - 1, false, this.state.key)\r\n\r\n            this.setState(\r\n                {checked: !this.state.checked}\r\n            )\r\n        }\r\n        else this.setState({quantity: this.state.quantity - 1})\r\n    }\r\n\r\n    renderQuantity = () => {\r\n        let quantity\r\n        if (this.state.quantity < 1 || this.state.quantity === undefined) {\r\n            quantity = 1\r\n        }\r\n        else quantity = this.state.quantity\r\n\r\n        if (!this.props.published && this.state.checked) {\r\n            return (\r\n                <div style={{float: 'right'}}>\r\n                    <i className=\"fas fa-minus\" onClick={this.decreaseQuantity}></i>                \r\n                    <span style={{margin: '0 10px', fontWeight: '700'}}>{quantity}</span>\r\n                    <i className=\"fas fa-plus\" onClick={this.increaseQuantity}></i>\r\n             </div>\r\n            )\r\n        }\r\n        if (this.props.published) {\r\n            return (\r\n                <span style={{float: 'right', margin: '0 10px', fontWeight: '700'}}>{this.props.item.quantity}</span>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //console.log('rendering List Item')\r\n\r\n        const name = this.isChecked()\r\n        const quantity = this.renderQuantity()\r\n        const background = this.props.darkMode === true ? 'rgb(36, 36, 36)' : 'rgb(255, 255, 255)'\r\n\r\n        return (\r\n            <ListGroupItem key={this.state.key} style={{background: background, display: 'flex', justifyContent: 'space-between'}}>\r\n                <label className=\"inputContainer\">{name}\r\n                    <input type=\"checkbox\" checked={this.state.checked} onChange={this.handleChange}></input>\r\n                    <span className=\"checkmark\"></span>\r\n                </label>\r\n\r\n                {/* <input type=\"checkbox\" className=\"form-check-input\" id={this.state.key} onChange={this.handleChange} checked={this.state.checked}></input>\r\n                <label htmlFor={this.state.key} style={{marginBottom: \"0\", marginLeft: \"5px\"}}>{name}</label> */}\r\n                {quantity}\r\n            </ListGroupItem>\r\n        )\r\n    }\r\n}","import { React, Component } from 'react'\r\nimport { Collapse, Button, ListGroup, ListGroupItem } from 'reactstrap'\r\nimport NewListItem from './NewListItem'\r\n\r\nexport default class NewListGroup extends Component{\r\n\r\n    state = {\r\n        isOpen: false\r\n    }\r\n\r\n\r\n    setIsOpen = () => {\r\n        this.setState({isOpen: !this.state.isOpen})\r\n    }\r\n\r\n    renderItems = () => {\r\n\r\n        return this.props.items.map((item) => {\r\n            return (\r\n                <NewListItem \r\n                    item={item} \r\n                    art={this.props.art} \r\n                    getData={this.props.getData} \r\n                    published={this.props.published}\r\n                    darkMode={this.props.darkMode}>\r\n                </NewListItem>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        //console.log('rendering NewListGroup')\r\n\r\n        const items = this.renderItems()\r\n        const background = this.props.darkMode === true ? 'rgb(36, 36, 36)' : 'rgb(255, 255, 255)'\r\n        return (\r\n            <>\r\n                <div className=\"list\" style={{background: background}}>\r\n                    <img src={this.props.icon} alt=\"icon\"></img>\r\n                    <span onClick={this.setIsOpen} style={{fontSize: '1.5rem', marginLeft: '10px', display: 'inline-block', width: '80%', padding: '10px'}}>{this.props.artName}</span>\r\n    \r\n                    <Collapse isOpen={this.state.isOpen}>\r\n                        <ListGroup style={{marginTop: '10px'}}>\r\n    \r\n                            {items}\r\n    \r\n                            <ListGroupItem  style={{textAlign: 'center', background: background}} onClick={this.setIsOpen}>\r\n                                <i className=\"fas fa-chevron-up\"></i>\r\n                            </ListGroupItem>\r\n                        </ListGroup>\r\n                    </Collapse>\r\n                </div>\r\n    \r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import { React, Component } from 'react'\r\nimport { Collapse, ListGroupItem, Button } from 'reactstrap'\r\nimport broccoli from './broccoli.svg'\r\nimport apple from './apple.svg'\r\nimport spinach from './spinach.png'\r\nimport berry from './berry.svg'\r\n\r\n\r\nimport NewListGroup from './NewListGroup'\r\n\r\n\r\nexport default class List extends Component{\r\n\r\n    state = {\r\n        isOpen: false\r\n    }\r\n\r\n    setIsOpen = () => {\r\n        this.setState({isOpen: !this.state.isOpen})\r\n    }\r\n\r\n    getData = () => {\r\n        console.log('tasdfvs')\r\n    }\r\n\r\n    renderList = (art, artName, icon) => {\r\n        const arr = this.props.list.data.filter(item => {\r\n            return item.art === art\r\n        })\r\n        if (arr.length !== 0 ) {\r\n            return (\r\n                <NewListGroup \r\n                    getData={this.getData}\r\n                    art = {art}\r\n                    items = {arr}\r\n                    artName = {artName}\r\n                    icon = {icon}\r\n                    published = {true}\r\n                    darkMode = {this.props.darkMode}\r\n                />\r\n            )\r\n        }\r\n        else return <></>\r\n\r\n    }\r\n    \r\n    renderComment = () => {\r\n        if (this.props.list.comment.length !== 0) {\r\n            return (\r\n                <ListGroupItem>\r\n                    {this.props.list.comment}\r\n                </ListGroupItem>\r\n            )\r\n        }\r\n        else return <></>\r\n    }\r\n\r\n    deleteList = () => {\r\n        this.props.deleteList(this.props.list.id)\r\n    }\r\n\r\n    render() {\r\n        //console.log('rendering List')\r\n        const background = this.props.darkMode === true ? 'rgb(36, 36, 36)' : 'rgb(255, 255, 255)'\r\n\r\n\r\n        if (this.props.list.data.length === 0 || this.state.isDeleted) {\r\n            return (<></>)\r\n        }\r\n\r\n        const vegetables = this.renderList('vegetables', 'Овощи', broccoli)\r\n        const fruits = this.renderList('fruits', 'Фрукты', apple)\r\n        const greens = this.renderList('greens', 'Зелень', spinach)\r\n        const berries = this.renderList('berries', 'Ягоды', berry)\r\n\r\n        const comment = this.renderComment()\r\n        return (\r\n            <>\r\n\r\n                <div className=\"list\" style={{padding: '0', background: background}}>\r\n                    <span onClick={this.setIsOpen} style={{fontSize: '1.5rem', marginLeft: '10px', display: 'inline-block', width: '80%', padding: '10px 0'}}>{this.props.list.name === '' ? 'Новый список' : this.props.list.name}</span>\r\n                    <Collapse isOpen={this.state.isOpen}>\r\n\r\n                        {comment}\r\n\r\n                        {vegetables}\r\n                        {fruits}\r\n                        {greens}\r\n                        {berries}\r\n\r\n                        <ListGroupItem style={{display: 'flex', justifyContent: 'end'}}>\r\n                            <Button color=\"danger\" style={{}} onClick={this.deleteList}>\r\n                                Удалить\r\n                            </Button>\r\n                        </ListGroupItem>\r\n\r\n\r\n                    </Collapse>\r\n                </div> \r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import { React, Component } from 'react'\r\nimport { Button } from 'reactstrap'\r\nimport List from './List'\r\n\r\nexport default class Lists extends Component{\r\n\r\n    renderLists = () => {\r\n\r\n        return this.props.lists.map((item) => {\r\n            return (\r\n                <List list={item} darkMode = {this.props.darkMode} deleteList={this.props.deleteList}></List>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        //console.log('rendering Lists')\r\n\r\n        const lists = this.renderLists()\r\n        const header = this.props.lists.length === 0 ? 'Списков пока нет' : 'Списки покупок'\r\n        return (\r\n            <>\r\n                <header><h1>{header}</h1></header>\r\n                {lists}\r\n                <Button color=\"primary\" style={{width: 'calc(100% - 20px)', margin: '10px'}} onClick={this.props.togglePapa}>Создать новый список</Button>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import { React, Component } from 'react'\r\nimport { Button } from 'reactstrap'\r\nimport broccoli from './broccoli.svg'\r\nimport apple from './apple.svg'\r\nimport spinach from './spinach.png'\r\nimport berry from './berry.svg'\r\n\r\nimport NewListGroup from './NewListGroup'\r\n\r\nexport default class NewList extends Component{\r\n\r\n    state = {\r\n        name: '',\r\n        data: [],\r\n        comment: ''\r\n    }\r\n\r\n    getData = (art, name, quantity, checked, key) => {\r\n\r\n        const arr = [...this.state.data].filter((item)=> {\r\n          return item.key !== key\r\n        })\r\n    \r\n        if (checked) {\r\n          arr.push({art: art, name: name, quantity: quantity, checked: checked, key: key})\r\n        }\r\n    \r\n        this.setState({data: arr})\r\n    }\r\n    \r\n    setListName = (event) => {\r\n        this.setState({\r\n          name: event.target.value\r\n        })\r\n      }\r\n\r\n    addNewList = () => {\r\n        this.props.getList(this.state.name, this.state.data, this.comment)\r\n    }\r\n\r\n    arr = [\r\n        {\r\n            name: 'vegetables',\r\n            artName: 'Овощи',\r\n            icon: broccoli,\r\n            data: [\r\n                {name: 'Помидор'}, \r\n                {name: 'Огурец'},\r\n                {name: 'Перец'}, \r\n                {name: 'Баклажан'}, \r\n                {name: 'Кабачок'}, \r\n                {name: 'Картофель'}, \r\n                {name: 'Лук'}, \r\n                {name: 'Морковь'}, \r\n                {name: 'Авокадо'}, \r\n                {name: 'Батат'}, \r\n                {name: 'Свекла'}, \r\n                {name: 'Чеснок'}, \r\n            ]\r\n        },\r\n\r\n        {\r\n            name: 'fruits',\r\n            artName: 'Фрукты',\r\n            icon: apple,\r\n            data: [\r\n                {name: 'Абрикос'}, \r\n                {name: 'Ананас'},\r\n                {name: 'Апельсин'},\r\n                {name: 'Арбуз'},\r\n                {name: 'Банан'},\r\n                {name: 'Виноград'},\r\n                {name: 'Гранат'},\r\n                {name: 'Грейпфрут'},\r\n                {name: 'Груша'},\r\n                {name: 'Дыня'},\r\n                {name: 'Киви'},\r\n                {name: 'Лайм'},\r\n                {name: 'Лимон'},\r\n                {name: 'Манго'},\r\n                {name: 'Мандарин'},\r\n                {name: 'Нектарин'},\r\n                {name: 'Персик'},\r\n                {name: 'Слива'},\r\n                {name: 'Яблоко'}\r\n            ]\r\n        },\r\n\r\n        {\r\n            name: 'greens',\r\n            artName: 'Зелень',\r\n            icon: spinach,\r\n            data: [\r\n                {name: 'Базилик'}, \r\n                {name: 'Лук'},\r\n                {name: 'Лук порей'}, \r\n                {name: 'Петрушка'},\r\n                {name: 'Рукола'},\r\n                {name: 'Салат'}, \r\n                {name: 'Салат китайский'},\r\n                {name: 'Романо'},\r\n                {name: 'Шпинат'},\r\n            ]\r\n        },\r\n\r\n        {\r\n            name: 'berries',\r\n            artName: 'Ягоды',\r\n            icon: berry,\r\n            data: [\r\n                {name: 'Вишня'}, \r\n                {name: 'Ежевика'},\r\n                {name: 'Земляника'},\r\n                {name: 'Клубника'},\r\n                {name: 'Клюква'}, \r\n                {name: 'Крыжовник'},\r\n                {name: 'Малина'},\r\n                {name: 'Смородина'},\r\n                {name: 'Хурма'}, \r\n                {name: 'Черешня'},\r\n                {name: 'Черная смородина'}\r\n            ]\r\n        }\r\n    ]\r\n\r\n    renderListGroups = () => {\r\n        return this.arr.map(item => {\r\n            return (\r\n                <NewListGroup \r\n                getData = {this.getData}\r\n                art = {item.name}\r\n                items = {item.data} \r\n                artName = {item.artName}\r\n                icon = {item.icon}\r\n                darkMode = {this.props.darkMode}/>\r\n            )\r\n        })\r\n    }\r\n\r\n    qwe = (event) => {\r\n        event.target.nextSibling.style.display = 'none'\r\n    }\r\n    \r\n    comment = ''\r\n\r\n    addComment = (event) => {\r\n        this.comment = event.target.value\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.comment)\r\n\r\n        const listGroups = this.renderListGroups()\r\n        const color = this.props.darkMode === true ? 'white' : 'black'\r\n        const background = this.props.darkMode === true ? 'rgb(36, 36, 36)' : 'rgb(255, 255, 255)'\r\n\r\n        return (\r\n            <>\r\n                <header style={{position: 'relative'}}>\r\n                    <input \r\n                        placeholder=\" Новый список\" \r\n                        // value=\"Новый список \"\r\n                        className=\"newListName\"\r\n                        onFocus = {this.qwe}\r\n                        onChange = {this.setListName}\r\n                        style={{color: color, textAlign: 'left', paddingLeft: '20%'}}>\r\n                    </input>\r\n                    <div style={{position: 'absolute', top: '50%', left: '20%', width: '1px', height: '40px', transform: 'translateY(-50%)', background: color, animation: 'flicker .5s alternate infinite'}}></div>\r\n                </header>\r\n\r\n                {listGroups}\r\n\r\n                <div style={{display: 'flex', alignItems: 'center'}}>\r\n                    <input \r\n                        onChange={this.addComment}\r\n                        placeholder = \"Комментарий\"\r\n                        style={{\r\n                            width: '100%',\r\n                            marginLeft: '10px',\r\n                            height: '40px',\r\n                            border: '1px solid rgba(128, 128, 128, 0.472)',\r\n                            borderRadius: '5px',\r\n                            color: color,\r\n                            background: background,\r\n                            outline: 'none',\r\n                            paddingLeft: '10px'\r\n                        }}></input>\r\n                    <Button \r\n                        color=\"primary\"\r\n                        onClick={this.addNewList}\r\n                        style={\r\n                            {float: 'right', \r\n                            margin: '10px'}\r\n                        }>Ok\r\n                    </Button>\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n","import { Component } from 'react';\nimport './App.css';\nimport Lists from './Lists'\nimport NewList from './NewList'\n\n\nexport default class App extends Component {\n  state = {\n    lists: [],\n    visible: false,\n    darkMode: false\n  }\n\n  componentDidMount = () => {\n    console.log(window.matchMedia('prefers-color-scheme'))\n    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      this.setState({darkMode: false})\n    }\n  }\n\n  togglePapa = () => {\n    this.setState({visible: !this.state.visible})\n  }\n\n  getList = (name, data, comment) => {\n    this.togglePapa()\n    const lists = this.state.lists\n    const obj = {\n      id: Math.random().toString(36).substring(2, 15),\n      name: name,\n      data: data,\n      comment: comment\n    }\n    if (data.length > 0) {\n      lists.push(obj)\n      this.setState({lists: lists})\n    }    \n  }\n\n  deleteList = (id) => {\n    const newArr = this.state.lists.filter(item => {\n      return item.id !== id\n    })\n    this.setState({lists: newArr})\n  }\n\n  render () {\n\n    if (this.state.darkMode) {\n      document.querySelector('body').style.background = \"black\"\n      document.querySelector('body').style.color = \"white\"\n    }\n    console.log('rendering App')\n    if (this.state.visible) {\n      return (\n        <NewList \n          getList={this.getList}\n          darkMode={this.state.darkMode}>\n        </NewList>\n      )\n    }\n    else return (\n      <Lists \n        lists={this.state.lists}\n        deleteList={this.deleteList}\n        togglePapa={this.togglePapa}\n        darkMode={this.state.darkMode}>\n      </Lists>\n    )\n  }\n\n}\n\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}