{"version":3,"sources":["broccoli.svg","apple.svg","spinach.png","berry.svg","NewListItem.js","NewListGroup.js","List.js","Lists.js","NewList.js","App.js","index.js"],"names":["NewListItem","state","checked","undefined","quantity","key","componentDidMount","console","log","setState","Math","random","toString","substring","handleChange","event","props","getData","art","item","name","target","isChecked","published","increaseQuantity","decreaseQuantity","renderQuantity","style","float","class","onClick","margin","fontWeight","this","ListGroupItem","type","id","onChange","htmlFor","marginBottom","marginLeft","Component","NewListGroup","isOpen","setIsOpen","renderItemList","items","map","itemList","className","src","icon","alt","fontSize","display","width","padding","artName","Collapse","ListGroup","marginTop","Button","List","renderList","arr","list","data","filter","length","listName","lists","vegetables","broccoli","fruits","apple","greens","spinach","berries","berry","Lists","renderLists","color","togglePapa","NewList","placeholder","setListName","addNewList","App","visible","componentDidUpdate","prevProps","push","qwerqwer","obj","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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CP,CAACA,KAAM,8CACP,CAACA,KAAM,8CACP,CAACA,KAAM,kCACP,CAACA,KAAM,wCACP,CAACA,KAAM,yC,EAGXqD,OAAS,CACL,CAACrD,KAAM,8CACP,CAACA,KAAM,wCACP,CAACA,KAAM,oDACP,CAACA,KAAM,kCACP,CAACA,KAAM,kCACP,CAACA,KAAM,oDACP,CAACA,KAAM,wCACP,CAACA,KAAM,0DACP,CAACA,KAAM,kCACP,CAACA,KAAM,4BACP,CAACA,KAAM,4BACP,CAACA,KAAM,4BACP,CAACA,KAAM,kCACP,CAACA,KAAM,kCACP,CAACA,KAAM,oDACP,CAACA,KAAM,oDACP,CAACA,KAAM,wCACP,CAACA,KAAM,kCACP,CAACA,KAAM,yC,EAIXuD,OAAS,CACL,CAACvD,KAAM,8CACP,CAACA,KAAM,sBACP,CAACA,KAAM,qDACP,CAACA,KAAM,oDACP,CAACA,KAAM,wCACP,CAACA,KAAM,kCACP,CAACA,KAAM,yFACP,CAACA,KAAM,wCACP,CAACA,KAAM,yC,EAGXyD,QAAU,CACN,CAACzD,KAAM,kCACP,CAACA,KAAM,8CACP,CAACA,KAAM,0DACP,CAACA,KAAM,oDACP,CAACA,KAAM,wCACP,CAACA,KAAM,0DACP,CAACA,KAAM,wCACP,CAACA,KAAM,0DACP,CAACA,KAAM,kCACP,CAACA,KAAM,8CACP,CAACA,KAAM,gG,4CAMX,WACI,OACI,qCACI,iCACI,uBACIgE,YAAY,sEACZnC,UAAU,cACVZ,SAAYJ,KAAKjB,MAAMqE,gBAG/B,cAAC,EAAD,CACIpE,QAAWgB,KAAKjB,MAAMC,QACtBC,IAAM,aACN4B,MAASb,KAAKsC,WACdd,QAAW,iCACXN,KAAQqB,IACZ,cAAC,EAAD,CACIvD,QAAWgB,KAAKjB,MAAMC,QACtBC,IAAM,SACN4B,MAASb,KAAKwC,OACdhB,QAAW,uCACXN,KAAQuB,IACZ,cAAC,EAAD,CACIzD,QAAWgB,KAAKjB,MAAMC,QACtBC,IAAM,SACN4B,MAASb,KAAK0C,OACdlB,QAAW,uCACXN,KAAQyB,IACZ,cAAC,EAAD,CACI3D,QAAWgB,KAAKjB,MAAMC,QACtBC,IAAM,UACN4B,MAASb,KAAK4C,QACdpB,QAAW,iCACXN,KAAQ2B,IAEZ,cAACjB,EAAA,EAAD,CACIoB,MAAM,OACNnD,QAASG,KAAKjB,MAAMsE,WACpB3D,MACI,CAACC,MAAO,QACRG,OAAQ,QALhB,uB,GAzGqBU,aCLhB8C,E,4MACnBtF,MAAQ,CACNiE,KAAM,GACNI,MAAO,GACPD,SAAU,GACVmB,SAAS,G,EAGXC,mBAAqB,SAACC,GAChBA,EAAUpB,MAAU,EAAKrE,MAAMqE,O,EAKrCrD,QAAU,SAACC,EAAKE,EAAMhB,EAAUF,EAASG,GAEvC,IAAM2D,EAAM,YAAI,EAAK/D,MAAMiE,MAAMC,QAAO,SAAChD,GACvC,OAAOA,EAAKd,MAAQA,KAGlBH,GACF8D,EAAI2B,KAAK,CAACzE,IAAKA,EAAKE,KAAMA,EAAMhB,SAAUA,EAAUF,QAASA,EAASG,IAAKA,IAG7E,EAAKI,SAAS,CAACyD,KAAMF,K,EAuBvB4B,SAAW,WACTrF,QAAQC,IAAI,iD,EAId0E,WAAa,WACX,EAAKzE,SAAS,CAAC+E,SAAU,EAAKvF,MAAMuF,W,EAGtCF,WAAa,WACX,EAAKJ,aADY,MAEiB,EAAKjF,MAA/BqE,EAFS,EAETA,MAAOJ,EAFE,EAEFA,KACT2B,EAAM,CACVxB,SAJe,EAEIA,SAGnBH,KAAMA,GAEJA,EAAKE,OAAS,IAChBE,EAAMqB,KAAKE,GACX,EAAKpF,SAAS,CACZ6D,MAAOA,EACPJ,KAAM,GACNG,SAAU,O,EAKhBgB,YAAc,SAACtE,GACb,EAAKN,SAAS,CACZ4D,SAAUtD,EAAMM,OAAOyE,S,4CAI3B,WACE,OAAI7D,KAAKhC,MAAMuF,QAEX,cAAC,EAAD,CACEvE,QAASgB,KAAKhB,QACdqE,WAAYrD,KAAKqD,WACjBD,YAAapD,KAAKoD,cAKtB,cAAC,EAAD,CACEf,MAAOrC,KAAKhC,MAAMqE,MAClBrD,QAASgB,KAAK2D,SACdV,WAAYjD,KAAKiD,iB,GA7FQzC,aCAjCsD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9c08d9c2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/broccoli.7c49f702.svg\";","export default __webpack_public_path__ + \"static/media/apple.f9cbf62c.svg\";","export default __webpack_public_path__ + \"static/media/spinach.99955154.png\";","export default __webpack_public_path__ + \"static/media/berry.a9fe4193.svg\";","import { React, Component} from 'react'\r\nimport { ListGroupItem } from 'reactstrap'\r\n\r\nexport default class NewListItem extends Component {\r\n    state = {\r\n        checked: undefined,    \r\n        quantity: 1,\r\n        key: ''\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        console.log('Component did mount')\r\n        this.setState(\r\n            {key: Math.random().toString(36).substring(2, 15)}\r\n        )\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.props.getData(this.props.art, this.props.item.name, this.state.quantity, event.target.checked, this.state.key)\r\n        this.setState({\r\n            checked: event.target.checked,\r\n        })\r\n    }\r\n\r\n    isChecked = () => {\r\n        if (this.state.checked) {\r\n            if (this.props.published) {\r\n                return <del>{this.props.item.name}</del>\r\n\r\n            }\r\n            else return <b>{this.props.item.name}</b>\r\n\r\n        }\r\n        else return <>{this.props.item.name}</>\r\n    }\r\n\r\n    increaseQuantity = () => {\r\n        this.props.getData(this.props.art, this.props.item.name, this.state.quantity + 1, this.state.checked, this.state.key)\r\n        this.setState({quantity: this.state.quantity + 1})\r\n    }\r\n\r\n    decreaseQuantity = () => {\r\n        if (this.state.quantity === 1) {\r\n            this.props.getData(this.props.art, this.props.item.name, this.state.quantity - 1, false, this.state.key)\r\n\r\n            this.setState(\r\n                {checked: !this.state.checked}\r\n            )\r\n        }\r\n    }\r\n\r\n    renderQuantity = () => {\r\n        let quantity\r\n        if (this.state.quantity < 1 || this.state.quantity === undefined) {\r\n            quantity = 1\r\n        }\r\n        else quantity = this.state.quantity\r\n\r\n        if (!this.props.published && this.state.checked) {\r\n            return (\r\n                <div style={{float: 'right'}}>\r\n                    <i class=\"fas fa-plus\" onClick={this.increaseQuantity}></i>\r\n                    <span style={{margin: '0 10px', fontWeight: '700'}}>{quantity}</span>\r\n                    <i class=\"fas fa-minus\" onClick={this.decreaseQuantity}></i>                \r\n             </div>\r\n            )\r\n        }\r\n        if (this.props.published) {\r\n            return (\r\n                <span style={{float: 'right', margin: '0 10px', fontWeight: '700'}}>{this.props.item.quantity}</span>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const name = this.isChecked()\r\n        const quantity = this.renderQuantity()\r\n        return (\r\n            <ListGroupItem key={this.state.key}>\r\n                <input type=\"checkbox\" id={this.state.key} onChange={this.handleChange} checked={this.state.checked}></input>\r\n                <label htmlFor={this.state.key} style={{marginBottom: \"0\", marginLeft: \"5px\"}}>{name}</label>\r\n                {quantity}\r\n            </ListGroupItem>\r\n        )\r\n    }\r\n}","import { React, Component } from 'react'\r\nimport { Collapse, Button, ListGroup, ListGroupItem } from 'reactstrap'\r\nimport NewListItem from './NewListItem'\r\n\r\nexport default class NewListGroup extends Component{\r\n\r\n    state = {\r\n        isOpen: false\r\n    }\r\n\r\n\r\n    setIsOpen = () => {\r\n        this.setState({isOpen: !this.state.isOpen})\r\n    }\r\n\r\n    renderItemList = () => {\r\n\r\n        return this.props.items.map((item) => {\r\n            return (\r\n                <NewListItem \r\n                    item={item} \r\n                    art={this.props.art} \r\n                    getData={this.props.getData} \r\n                    published={this.props.published}>\r\n                </NewListItem>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const itemList = this.renderItemList()\r\n        return (\r\n            <>\r\n                <div className=\"list\">\r\n                    <img src={this.props.icon} alt=\"icon\"></img>\r\n                    <span onClick={this.setIsOpen} style={{fontSize: '1.5rem', marginLeft: '10px', display: 'inline-block', width: '80%', padding: '10px'}}>{this.props.artName}</span>\r\n    \r\n                    <Collapse isOpen={this.state.isOpen}>\r\n                        <ListGroup style={{marginTop: '10px'}}>\r\n    \r\n                            {itemList}\r\n    \r\n                            <ListGroupItem>\r\n                                <Button onClick={this.setIsOpen}>Свернуть</Button>\r\n                            </ListGroupItem>\r\n                        </ListGroup>\r\n                    </Collapse>\r\n                </div>\r\n    \r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import { React, Component } from 'react'\r\nimport { Collapse, ListGroup } from 'reactstrap'\r\nimport broccoli from './broccoli.svg'\r\nimport apple from './apple.svg'\r\nimport spinach from './spinach.png'\r\nimport berry from './berry.svg'\r\n\r\n\r\nimport NewListGroup from './NewListGroup'\r\n\r\n\r\nexport default class List extends Component{\r\n\r\n    state = {\r\n        isOpen: false\r\n    }\r\n\r\n    setIsOpen = () => {\r\n        this.setState({isOpen: !this.state.isOpen})\r\n    }\r\n\r\n    renderList = (art, artName, icon) => {\r\n        const arr = this.props.list.data.filter(item => {\r\n            return item.art === art\r\n        })\r\n        if (arr.length !== 0) {\r\n            return (\r\n                <div className=\"list\" style={{padding: '0'}}>\r\n                    <span onClick={this.setIsOpen} style={{fontSize: '1.5rem', marginLeft: '10px', display: 'inline-block', width: '80%', padding: '10px 0'}}>{this.props.list.listName === '' ? 'Новый список' : this.props.lists.listName}</span>\r\n                    <Collapse isOpen={this.state.isOpen}>\r\n                        <ListGroup>\r\n                        <NewListGroup \r\n                            getData={this.props.getData}\r\n                            art = {art}\r\n                            items = {arr}\r\n                            artName = {artName}\r\n                            icon = {icon}\r\n                            published = {true}\r\n                        />\r\n                        </ListGroup>\r\n                    </Collapse>\r\n                </div>\r\n            )\r\n        }\r\n        else return < ></>\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.props.list.data.length === 0) {\r\n            return (<></>)\r\n        }\r\n\r\n        const vegetables = this.renderList('vegetables', 'Овощи', broccoli)\r\n        const fruits = this.renderList('fruits', 'Фрукты', apple)\r\n        const greens = this.renderList('greens', 'Зелень', spinach)\r\n        const berries = this.renderList('berries', 'Ягоды', berry)\r\n        return (\r\n            <>\r\n                {vegetables}\r\n                {fruits}\r\n                {greens}\r\n                {berries}\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import { React, Component } from 'react'\r\nimport { Button } from 'reactstrap'\r\nimport List from './List'\r\n\r\nexport default class Lists extends Component{\r\n\r\n    renderLists = () => {\r\n        return this.props.lists.map((item) => {\r\n            return (\r\n                <List list={item} getData={this.props.getData}></List>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const lists = this.renderLists()\r\n        return (\r\n            <>\r\n                <header><h1>Списки покупок</h1></header>\r\n                {lists}\r\n                <Button color=\"primary\" style={{width: 'calc(100% - 20px)', margin: '10px'}} onClick={this.props.togglePapa}>Создать новый список</Button>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import { React, Component } from 'react'\r\nimport { Button } from 'reactstrap'\r\nimport broccoli from './broccoli.svg'\r\nimport apple from './apple.svg'\r\nimport spinach from './spinach.png'\r\nimport berry from './berry.svg'\r\n\r\n\r\nimport NewListGroup from './NewListGroup'\r\n\r\n\r\nexport default class NewList extends Component{\r\n\r\n\r\n    vegetables = [\r\n        {name: 'Помидор'}, \r\n        {name: 'Огурец'},\r\n        {name: 'Перец'}, \r\n        {name: 'Баклажан'}, \r\n        {name: 'Кабачок'}, \r\n        {name: 'Картофель'}, \r\n        {name: 'Лук'}, \r\n        {name: 'Морковь'}, \r\n        {name: 'Авокадо'}, \r\n        {name: 'Батат'}, \r\n        {name: 'Свекла'}, \r\n        {name: 'Чеснок'}, \r\n    ]\r\n\r\n    fruits = [\r\n        {name: 'Абрикос'}, \r\n        {name: 'Ананас'},\r\n        {name: 'Апельсин'},\r\n        {name: 'Арбуз'},\r\n        {name: 'Банан'},\r\n        {name: 'Виноград'},\r\n        {name: 'Гранат'},\r\n        {name: 'Грейпфрут'},\r\n        {name: 'Груша'},\r\n        {name: 'Дыня'},\r\n        {name: 'Киви'},\r\n        {name: 'Лайм'},\r\n        {name: 'Лимон'},\r\n        {name: 'Манго'},\r\n        {name: 'Мандарин'},\r\n        {name: 'Нектарин'},\r\n        {name: 'Персик'},\r\n        {name: 'Слива'},\r\n        {name: 'Яблоко'}\r\n\r\n    ]\r\n\r\n    greens = [\r\n        {name: 'Базилик'}, \r\n        {name: 'Лук'},\r\n        {name: 'Лук порей'}, \r\n        {name: 'Петрушка'},\r\n        {name: 'Рукола'},\r\n        {name: 'Салат'}, \r\n        {name: 'Салат китайский'},\r\n        {name: 'Романо'},\r\n        {name: 'Шпинат'},\r\n    ]\r\n\r\n    berries = [\r\n        {name: 'Вишня'}, \r\n        {name: 'Ежевика'},\r\n        {name: 'Земляника'},\r\n        {name: 'Клубника'},\r\n        {name: 'Клюква'}, \r\n        {name: 'Крыжовник'},\r\n        {name: 'Малина'},\r\n        {name: 'Смородина'},\r\n        {name: 'Хурма'}, \r\n        {name: 'Черешня'},\r\n        {name: 'Черная смородина'}\r\n    ]\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <header>\r\n                    <input \r\n                        placeholder=\"Новый список\" \r\n                        className=\"newListName\"\r\n                        onChange = {this.props.setListName}>\r\n                    </input>\r\n                </header>\r\n                <NewListGroup \r\n                    getData = {this.props.getData}\r\n                    art = 'vegetables'\r\n                    items = {this.vegetables} \r\n                    artName = {'Овощи'}\r\n                    icon = {broccoli}/>\r\n                <NewListGroup \r\n                    getData = {this.props.getData}\r\n                    art = 'fruits'\r\n                    items = {this.fruits} \r\n                    artName = {'Фрукты'}\r\n                    icon = {apple}/>\r\n                <NewListGroup \r\n                    getData = {this.props.getData}\r\n                    art = 'greens'\r\n                    items = {this.greens} \r\n                    artName = {'Зелень'}\r\n                    icon = {spinach}/>\r\n                <NewListGroup \r\n                    getData = {this.props.getData}\r\n                    art = 'berries'\r\n                    items = {this.berries} \r\n                    artName = {'Ягоды'}\r\n                    icon = {berry}/>\r\n\r\n                <Button \r\n                    color=\"info\" \r\n                    onClick={this.props.addNewList}\r\n                    style={\r\n                        {float: 'right', \r\n                        margin: '10px'}\r\n                    }>Ok\r\n                </Button>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import { Component } from 'react';\nimport './App.css';\nimport Lists from './Lists'\nimport NewList from './NewList'\n\n\nexport default class App extends Component {\n  state = {\n    data: [],\n    lists: [],\n    listName: '',\n    visible: false\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.lists !== this.state.lists) {\n  \n    }\n  }\n  \n  getData = (art, name, quantity, checked, key) => {\n\n    const arr = [...this.state.data].filter((item)=> {\n      return item.key !== key\n    })\n\n    if (checked) {\n      arr.push({art: art, name: name, quantity: quantity, checked: checked, key: key})\n    }\n\n    this.setState({data: arr})\n\n    // else {\n    //   const newArr = arr.filter((item, i)=> {\n    //     return item.key !== key\n    //   })\n    //   this.setState({data: newArr})\n    // }\n  \n    // const arr = [...this.state.data]\n\n    // if (checked) {\n    //   arr.push({art: art, name: name, quantity: quantity, checked: checked, key: key})\n    //   this.setState({data: arr})\n    // }\n    // else {\n    //   const newArr = arr.filter((item, i)=> {\n    //     return item.key !== key\n    //   })\n    //   this.setState({data: newArr})\n    // }\n  }\n\n  qwerqwer = () => {\n    console.log('тра ла ла')\n  }\n\n\n  togglePapa = () => {\n    this.setState({visible: !this.state.visible})\n  }\n\n  addNewList = () => {\n    this.togglePapa()\n    const { lists, data, listName } = this.state\n    const obj = {\n      listName: listName,\n      data: data\n    }\n    if (data.length > 0) {\n      lists.push(obj)\n      this.setState({\n        lists: lists,\n        data: [],\n        listName: ''\n      })\n    }    \n  }\n\n  setListName = (event) => {\n    this.setState({\n      listName: event.target.value\n    })\n  }\n\n  render () {\n    if (this.state.visible) {\n      return (\n        <NewList \n          getData={this.getData} \n          addNewList={this.addNewList} \n          setListName={this.setListName}>\n        </NewList>\n      )\n    }\n    else return (\n      <Lists \n        lists={this.state.lists}\n        getData={this.qwerqwer} \n        togglePapa={this.togglePapa}>\n      </Lists>\n    )\n  }\n\n}\n\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}