{"version":3,"sources":["broccoli.svg","apple.svg","spinach.png","berry.svg","NewListItem.js","NewListGroup.js","List.js","Lists.js","NewList.js","App.js","index.js"],"names":["NewListItem","state","checked","key","Math","random","toString","substring","handleChange","event","setState","target","props","getData","art","item","name","isChecked","published","this","ListGroupItem","type","id","onChange","htmlFor","style","marginBottom","marginLeft","Component","NewListGroup","isOpen","setIsOpen","renderItemList","items","map","itemList","className","src","icon","alt","onClick","fontSize","display","width","padding","artName","Collapse","ListGroup","marginTop","Button","List","qwe","arr","lists","data","forEach","push","length","vegetables","broccoli","fruits","apple","greens","spinach","berries","berry","Lists","listName","NewList","App","visible","newArr","filter","i","qwerqwer","console","log","togglePapa","addNewList","obj","renderLists","setListName","value","placeholder","color","float","margin","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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dwC,E,4MAGjBV,WAAa,CACT,CAAC1C,KAAM,8CACP,CAACA,KAAM,wCACP,CAACA,KAAM,kCACP,CAACA,KAAM,oDACP,CAACA,KAAM,8CACP,CAACA,KAAM,0DACP,CAACA,KAAM,sBACP,CAACA,KAAM,8CACP,CAACA,KAAM,8CACP,CAACA,KAAM,kCACP,CAACA,KAAM,wCACP,CAACA,KAAM,yC,EAGX4C,OAAS,CACL,CAAC5C,KAAM,8CACP,CAACA,KAAM,wCACP,CAACA,KAAM,oDACP,CAACA,KAAM,kCACP,CAACA,KAAM,kCACP,CAACA,KAAM,oDACP,CAACA,KAAM,wCACP,CAACA,KAAM,0DACP,CAACA,KAAM,kCACP,CAACA,KAAM,4BACP,CAACA,KAAM,4BACP,CAACA,KAAM,4BACP,CAACA,KAAM,kCACP,CAACA,KAAM,kCACP,CAACA,KAAM,oDACP,CAACA,KAAM,oDACP,CAACA,KAAM,wCACP,CAACA,KAAM,kCACP,CAACA,KAAM,yC,EAIX8C,OAAS,CACL,CAAC9C,KAAM,8CACP,CAACA,KAAM,sBACP,CAACA,KAAM,qDACP,CAACA,KAAM,oDACP,CAACA,KAAM,wCACP,CAACA,KAAM,kCACP,CAACA,KAAM,yFACP,CAACA,KAAM,wCACP,CAACA,KAAM,yC,EAGXgD,QAAU,CACN,CAAChD,KAAM,kCACP,CAACA,KAAM,8CACP,CAACA,KAAM,0DACP,CAACA,KAAM,oDACP,CAACA,KAAM,wCACP,CAACA,KAAM,0DACP,CAACA,KAAM,wCACP,CAACA,KAAM,0DACP,CAACA,KAAM,kCACP,CAACA,KAAM,8CACP,CAACA,KAAM,gG,4CAMX,WACI,OACI,qCACI,cAAC,EAAD,CACIH,QAAWM,KAAKP,MAAMC,QACtBC,IAAM,aACNmB,MAASd,KAAKuC,WACdb,QAAW,iCACXP,KAAQqB,IACZ,cAAC,EAAD,CACI9C,QAAWM,KAAKP,MAAMC,QACtBC,IAAM,SACNmB,MAASd,KAAKyC,OACdf,QAAW,uCACXP,KAAQuB,IACZ,cAAC,EAAD,CACIhD,QAAWM,KAAKP,MAAMC,QACtBC,IAAM,SACNmB,MAASd,KAAK2C,OACdjB,QAAW,uCACXP,KAAQyB,IACZ,cAAC,EAAD,CACIlD,QAAWM,KAAKP,MAAMC,QACtBC,IAAM,UACNmB,MAASd,KAAK6C,QACdnB,QAAW,iCACXP,KAAQ2B,W,GAhGSrC,aCHhByC,E,4MACnBpE,MAAQ,CACNqD,KAAM,GACND,MAAO,GACPc,SAAU,GACVG,SAAS,G,EAIXzD,QAAU,SAACC,EAAKE,EAAMf,EAAOE,GAE3B,IAAMiD,EAAG,YAAO,EAAKnD,MAAMqD,MAC3B,IAAc,IAAVrD,EACFmD,EAAII,KAAK,CAAC1C,IAAKA,EAAKE,KAAMA,EAAMf,MAAOA,EAAOE,IAAKA,IACnD,EAAKO,SAAS,CAAC4C,KAAMF,QAElB,CACH,IAAMmB,EAASnB,EAAIoB,QAAO,SAACzD,EAAM0D,GAC/B,OAAO1D,EAAKZ,MAAQA,KAEtB,EAAKO,SAAS,CAAC4C,KAAMiB,M,EAIzBG,SAAW,WACTC,QAAQC,IAAI,iD,EAIdC,WAAa,WACX,EAAKnE,SAAS,CAAC4D,SAAU,EAAKrE,MAAMqE,W,EAGtCQ,WAAa,WACX,EAAKD,aADY,MAEiB,EAAK5E,MAA/BoD,EAFS,EAETA,MAAOC,EAFE,EAEFA,KACTyB,EAAM,CACVZ,SAJe,EAEIA,SAGnBb,KAAMA,GAEJA,EAAKG,OAAS,IAChBJ,EAAMG,KAAKuB,GACX,EAAKrE,SAAS,CACZ2C,MAAOA,EACPC,KAAM,GACNa,SAAU,O,EAKhBa,YAAc,WAEZ,OADAL,QAAQC,IAAI,EAAK3E,MAAMoD,OACnB,EAAKpD,MAAMoD,MAAMI,OAAS,EACrB,EAAKxD,MAAMoD,MAAMnB,KAAI,SAAAnB,GAC1B,OACE,cAAC,EAAD,CAAOsC,MAAOtC,EAAMF,QAAS,EAAK6D,cAI5B,8B,EAIdO,YAAc,SAACxE,GACb,EAAKC,SAAS,CACZyD,SAAU1D,EAAME,OAAOuE,S,4CAI3B,WACE,GAAI/D,KAAKlB,MAAMqE,QACb,OACE,qCACE,iCACE,uBACEa,YAAY,sEACZ/C,UAAU,cACVb,SAAYJ,KAAK8D,gBAIrB,cAAC,EAAD,CAASpE,QAASM,KAAKN,UACvB,cAACoC,EAAA,EAAD,CACEmC,MAAM,OACN5C,QAASrB,KAAK2D,WACdrD,MACI,CAAC4D,MAAO,QACPC,OAAQ,QALf,mBAYJ,IAAMjC,EAAQlC,KAAK6D,cACnB,OACE,qCACE,iCAAQ,mHACP3B,EACD,cAACJ,EAAA,EAAD,CAAQmC,MAAM,UAAU3D,MAAO,CAACkB,MAAO,oBAAqB2C,OAAQ,QAAS9C,QAASrB,KAAK0D,WAA3F,mI,GAnGuBjD,aCFjC2D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0e7d6bc5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/broccoli.7c49f702.svg\";","export default __webpack_public_path__ + \"static/media/apple.f9cbf62c.svg\";","export default __webpack_public_path__ + \"static/media/spinach.99955154.png\";","export default __webpack_public_path__ + \"static/media/berry.a9fe4193.svg\";","import { React, Component} from 'react'\r\nimport { ListGroupItem } from 'reactstrap'\r\n\r\nexport default class NewListItem extends Component {\r\n    state = {\r\n        checked: null,        \r\n    }\r\n\r\n    key = `item${Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)}`\r\n    \r\n    handleChange = (event) => {\r\n        this.setState({\r\n            checked: event.target.checked,\r\n        })\r\n\r\n        this.props.getData(this.props.art, this.props.item.name, event.target.checked, this.key)\r\n\r\n    }\r\n\r\n    isChecked = () => {\r\n        if (this.state.checked) {\r\n            if (this.props.published) {\r\n                return <del>{this.props.item.name}</del>\r\n\r\n            }\r\n            else return <b>{this.props.item.name}</b>\r\n\r\n        }\r\n        else return <>{this.props.item.name}</>\r\n    }\r\n\r\n    render() {\r\n        const name = this.isChecked()\r\n        \r\n        return (\r\n            <ListGroupItem key={this.key}>\r\n                <input type=\"checkbox\" id={this.key} onChange={this.handleChange} checked={this.state.checked}></input>\r\n                <label htmlFor={this.key} style={{marginBottom: \"0\", marginLeft: \"5px\"}}>{name}</label>\r\n            </ListGroupItem>\r\n        )\r\n    }\r\n}","import { React, Component } from 'react'\r\nimport { Collapse, Button, ListGroup, ListGroupItem } from 'reactstrap'\r\nimport NewListItem from './NewListItem'\r\n\r\nexport default class NewListGroup extends Component{\r\n\r\n    state = {\r\n        isOpen: false\r\n    }\r\n\r\n\r\n    setIsOpen = () => {\r\n        this.setState({isOpen: !this.state.isOpen})\r\n    }\r\n\r\n    renderItemList = () => {\r\n        return this.props.items.map((item) => {\r\n            return (\r\n                <NewListItem item={item} art={this.props.art} getData={this.props.getData} published={this.props.published}></NewListItem>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const itemList = this.renderItemList()\r\n        return (\r\n            <>\r\n                <div className=\"list\">\r\n                    <img src={this.props.icon} alt=\"icon\"></img>\r\n                    <span onClick={this.setIsOpen} style={{fontSize: '1.5rem', marginLeft: '10px', display: 'inline-block', width: '80%', padding: '10px'}}>{this.props.artName}</span>\r\n    \r\n                    <Collapse isOpen={this.state.isOpen}>\r\n                        <ListGroup style={{marginTop: '10px'}}>\r\n    \r\n                            {itemList}\r\n    \r\n                            <ListGroupItem>\r\n                                <Button onClick={this.setIsOpen}>Свернуть</Button>\r\n                            </ListGroupItem>\r\n                        </ListGroup>\r\n                    </Collapse>\r\n                </div>\r\n    \r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import { React, Component } from 'react'\r\nimport { Button } from 'reactstrap'\r\nimport broccoli from './broccoli.svg'\r\nimport apple from './apple.svg'\r\nimport spinach from './spinach.png'\r\nimport berry from './berry.svg'\r\n\r\n\r\nimport NewListGroup from './NewListGroup'\r\n\r\n\r\nexport default class List extends Component{\r\n\r\n\r\n    qwe = (art, artName, icon) => {\r\n        const arr = []\r\n        this.props.lists.data.forEach(item => {\r\n            if (item.art === art) {\r\n                arr.push(item)\r\n            }\r\n        })\r\n        if (arr.length !== 0) {\r\n            return (\r\n                <NewListGroup \r\n                getData={this.props.getData}\r\n                art = {art}\r\n                items = {arr}\r\n                artName = {artName}\r\n                icon = {icon}\r\n                published = {true}/>\r\n            )\r\n        }\r\n        else return < ></>\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (this.props.lists.data.length === 0) {\r\n            return (<></>)\r\n        }\r\n\r\n        const vegetables = this.qwe('vegetables', 'Овощи', broccoli)\r\n        const fruits = this.qwe('fruits', 'Фрукты', apple)\r\n        const greens = this.qwe('greens', 'Зелень', spinach)\r\n        const berries = this.qwe('berries', 'Ягоды', berry)\r\n        return (\r\n            <>\r\n                {vegetables}\r\n                {fruits}\r\n                {greens}\r\n                {berries}\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import { React, Component } from 'react'\r\nimport { Collapse, Button, ListGroup, ListGroupItem } from 'reactstrap'\r\nimport List from './List'\r\nexport default class Lists extends Component{\r\n\r\n    state = {\r\n        isOpen: false\r\n    }\r\n\r\n\r\n    setIsOpen = () => {\r\n        this.setState({isOpen: !this.state.isOpen})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"list\" style={{padding: '0'}}>\r\n                    <span onClick={this.setIsOpen} style={{fontSize: '1.5rem', marginLeft: '10px', display: 'inline-block', width: '80%', padding: '10px 0'}}>{this.props.lists.listName === '' ? 'Новый список' : this.props.lists.listName}</span>\r\n                    <Collapse isOpen={this.state.isOpen}>\r\n                        <ListGroup>\r\n                            <List lists={this.props.lists} getData={this.props.getData}></List>\r\n                        </ListGroup>\r\n                    </Collapse>\r\n                </div>\r\n    \r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import { React, Component } from 'react'\r\nimport { Button } from 'reactstrap'\r\nimport broccoli from './broccoli.svg'\r\nimport apple from './apple.svg'\r\nimport spinach from './spinach.png'\r\nimport berry from './berry.svg'\r\n\r\n\r\nimport NewListGroup from './NewListGroup'\r\n\r\n\r\nexport default class NewList extends Component{\r\n\r\n\r\n    vegetables = [\r\n        {name: 'Помидор'}, \r\n        {name: 'Огурец'},\r\n        {name: 'Перец'}, \r\n        {name: 'Баклажан'}, \r\n        {name: 'Кабачок'}, \r\n        {name: 'Картофель'}, \r\n        {name: 'Лук'}, \r\n        {name: 'Морковь'}, \r\n        {name: 'Авокадо'}, \r\n        {name: 'Батат'}, \r\n        {name: 'Свекла'}, \r\n        {name: 'Чеснок'}, \r\n    ]\r\n\r\n    fruits = [\r\n        {name: 'Абрикос'}, \r\n        {name: 'Ананас'},\r\n        {name: 'Апельсин'},\r\n        {name: 'Арбуз'},\r\n        {name: 'Банан'},\r\n        {name: 'Виноград'},\r\n        {name: 'Гранат'},\r\n        {name: 'Грейпфрут'},\r\n        {name: 'Груша'},\r\n        {name: 'Дыня'},\r\n        {name: 'Киви'},\r\n        {name: 'Лайм'},\r\n        {name: 'Лимон'},\r\n        {name: 'Манго'},\r\n        {name: 'Мандарин'},\r\n        {name: 'Нектарин'},\r\n        {name: 'Персик'},\r\n        {name: 'Слива'},\r\n        {name: 'Яблоко'}\r\n\r\n    ]\r\n\r\n    greens = [\r\n        {name: 'Базилик'}, \r\n        {name: 'Лук'},\r\n        {name: 'Лук порей'}, \r\n        {name: 'Петрушка'},\r\n        {name: 'Рукола'},\r\n        {name: 'Салат'}, \r\n        {name: 'Салат китайский'},\r\n        {name: 'Романо'},\r\n        {name: 'Шпинат'},\r\n    ]\r\n\r\n    berries = [\r\n        {name: 'Вишня'}, \r\n        {name: 'Ежевика'},\r\n        {name: 'Земляника'},\r\n        {name: 'Клубника'},\r\n        {name: 'Клюква'}, \r\n        {name: 'Крыжовник'},\r\n        {name: 'Малина'},\r\n        {name: 'Смородина'},\r\n        {name: 'Хурма'}, \r\n        {name: 'Черешня'},\r\n        {name: 'Черная смородина'}\r\n    ]\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <NewListGroup \r\n                    getData = {this.props.getData}\r\n                    art = 'vegetables'\r\n                    items = {this.vegetables} \r\n                    artName = {'Овощи'}\r\n                    icon = {broccoli}/>\r\n                <NewListGroup \r\n                    getData = {this.props.getData}\r\n                    art = 'fruits'\r\n                    items = {this.fruits} \r\n                    artName = {'Фрукты'}\r\n                    icon = {apple}/>\r\n                <NewListGroup \r\n                    getData = {this.props.getData}\r\n                    art = 'greens'\r\n                    items = {this.greens} \r\n                    artName = {'Зелень'}\r\n                    icon = {spinach}/>\r\n                <NewListGroup \r\n                    getData = {this.props.getData}\r\n                    art = 'berries'\r\n                    items = {this.berries} \r\n                    artName = {'Ягоды'}\r\n                    icon = {berry}/>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import { buildQueries } from '@testing-library/dom';\nimport { Component } from 'react';\nimport { Button } from 'reactstrap'\nimport './App.css';\nimport Lists from './Lists'\nimport NewList from './NewList'\n\n\nexport default class App extends Component {\n  state = {\n    data: [],\n    lists: [],\n    listName: '',\n    visible: false\n  }\n\n  \n  getData = (art, name, state, key) => {\n  \n    const arr = [...this.state.data]\n    if (state === true) {\n      arr.push({art: art, name: name, state: state, key: key})\n      this.setState({data: arr})\n    }\n    else {\n      const newArr = arr.filter((item, i)=> {\n        return item.key !== key\n      })\n      this.setState({data: newArr})\n    }\n  }\n\n  qwerqwer = () => {\n    console.log('тра ла ла')\n  }\n\n\n  togglePapa = () => {\n    this.setState({visible: !this.state.visible})\n  }\n\n  addNewList = () => {\n    this.togglePapa()\n    const { lists, data, listName } = this.state\n    const obj = {\n      listName: listName,\n      data: data\n    }\n    if (data.length > 0) {\n      lists.push(obj)\n      this.setState({\n        lists: lists,\n        data: [],\n        listName: ''\n      })\n    }    \n  }\n\n  renderLists = () => {\n    console.log(this.state.lists)\n    if (this.state.lists.length > 0) {\n      return this.state.lists.map(item => {\n        return (\n          <Lists lists={item} getData={this.qwerqwer}></Lists>\n        )\n      })\n    }\n    else return <></>\n\n  }\n\n  setListName = (event) => {\n    this.setState({\n      listName: event.target.value\n    })\n  }\n\n  render () {\n    if (this.state.visible) {\n      return (\n        <>\n          <header>\n            <input \n              placeholder=\"Новый список\" \n              className=\"newListName\"\n              onChange = {this.setListName}>\n              \n            </input>\n          </header>\n          <NewList getData={this.getData}></NewList>\n          <Button \n            color=\"info\" \n            onClick={this.addNewList}\n            style={\n                {float: 'right', \n                 margin: '10px'}\n            }>Ok\n          </Button>\n        </>\n      )\n    }\n    else {\n      const lists = this.renderLists()\n      return (\n        <>\n          <header><h1>Списки покупок</h1></header>\n          {lists}\n          <Button color=\"primary\" style={{width: 'calc(100% - 20px)', margin: '10px'}} onClick={this.togglePapa}>Создать новый список</Button>\n        </>\n      )\n    }\n\n  }\n\n}\n\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}